#!/usr/bin/env bash

#
# Sorts media files into a <year>/<month> folder structure.
# Made for MacOS.
#
# (c) 2016 Roozbeh Farahbod
#
# The MIT License (MIT)
#
# This script requires `exiftool` to read the EXIF information from the media
# files. You can download it from http://www.sno.phy.queensu.ca/~phil/exiftool/
#

# Run on MacOS only
unamestr=$(uname)
if [ "$unamestr" != "Darwin" ]
then
  echo "Error: This script is written for MacOS."
  exit 1
fi

which -s exiftool
exiftoolExists=$?
if [ $exiftoolExists -ne 0 ]
then
  echo "Error: This script requires 'exiftool'. You can download it from http://www.sno.phy.queensu.ca/~phil/exiftool/"
  exit 1
fi

dir="$1"

# check if a directory is given
if [ -z "$dir" ]
then
  echo "usage: sortMedia <media_folder>"
  exit 1
fi

# check if directory exists
if [ ! -d "${dir}" ]
then
  echo "The directory '${dir}' does not exist. "
  exit 1
fi

pushd "${dir}" > /dev/null

# Ensure date folder exists
ensureDateFolder() {
  folder="$1"
  if [ ! -d "${folder}" ]
  then
    mkdir -p "${folder}"
    echo "Made missing folder ${folder}."
  fi
}

# Move the files
for imgfile in *.*
do
  date=$(exiftool $imgfile | grep -m 1 "Create Date" | grep -v "000" | sed 's/^.*:\ \(20..\):\(..\):.*/\1 \2/g')
  if [ -z "$date" ]
  then
    date=$(exiftool $imgfile | grep -m 1 "File Modification Date" | grep -v "000" | sed 's/^.*:\ \(20..\):\(..\):.*/\1 \2/g')
  fi
  if [ -z "$date" ]
  then
    echo "Skipping ${imgfile}."
  else
    year=${date% *}
    month=${date##* }
    folder="${year}/${month}"
    ensureDateFolder "$folder"
    echo "${imgfile} -> ${folder}"
    mv -i "$imgfile" "$folder"
  fi
done

popd > /dev/null
